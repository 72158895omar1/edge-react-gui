// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateWalletSelectFiatComponent should render with loading props 1`] = `
[
  <View
    onLayout={[Function]}
    style={
      [
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        {
          "backgroundColor": "#1a1a1a",
        },
      ]
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight="0"
      bbWidth="0"
      focusable={false}
      height={0}
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        }
      }
      vbHeight={0}
      vbWidth={0}
      width={0}
    >
      <RNSVGGroup
        fill={
          {
            "payload": 4278190080,
            "type": 0,
          }
        }
      >
        <RNSVGDefs>
          <RNSVGRadialGradient
            cx="50%"
            cy="50%"
            fx="50%"
            fy="50%"
            gradient={
              [
                0,
                -1,
                0.125,
                -167772161,
                0.25,
                -637534209,
                0.75,
                654311423,
                0.875,
                184549375,
                1,
                16777215,
              ]
            }
            gradientTransform={null}
            gradientUnits={0}
            name="grad0"
            rx="50%"
            ry="50%"
          />
          <RNSVGRadialGradient
            cx="50%"
            cy="50%"
            fx="50%"
            fy="50%"
            gradient={
              [
                0,
                -216279,
                0.0588,
                -216279,
                0.1765,
                -167988439,
                0.29410000000000003,
                -637750487,
                0.7646999999999999,
                654095145,
                0.8824,
                184333097,
                1,
                16560937,
              ]
            }
            gradientTransform={null}
            gradientUnits={0}
            name="grad1"
            rx="50%"
            ry="50%"
          />
          <RNSVGRadialGradient
            cx="50%"
            cy="50%"
            fx="50%"
            fy="50%"
            gradient={
              [
                0,
                -16719740,
                0.4667,
                -16719740,
                0.5333,
                -184491900,
                0.6,
                -654253948,
                0.8667,
                637591684,
                0.9333,
                167829636,
                1,
                57476,
              ]
            }
            gradientTransform={null}
            gradientUnits={0}
            name="grad2"
            rx="50%"
            ry="50%"
          />
        </RNSVGDefs>
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          opacity={0.25}
        >
          <RNSVGCircle
            cx="10%"
            cy="10%"
            fill={
              {
                "brushRef": "grad0",
                "type": 1,
              }
            }
            propList={
              [
                "fill",
              ]
            }
            r="224.73239436619718"
          />
          <RNSVGCircle
            cx="95%"
            cy="30%"
            fill={
              {
                "brushRef": "grad1",
                "type": 1,
              }
            }
            propList={
              [
                "fill",
              ]
            }
            r="238.7781690140845"
          />
          <RNSVGCircle
            cx="-15%"
            cy="100%"
            fill={
              {
                "brushRef": "grad2",
                "type": 1,
              }
            }
            propList={
              [
                "fill",
              ]
            }
            r="421.37323943661977"
          />
        </RNSVGGroup>
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>,
  <View
    style={
      [
        {
          "alignItems": "stretch",
          "flexDirection": "column",
          "justifyContent": "flex-start",
        },
        {
          "height": 1334,
          "width": 750,
        },
        {
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 64,
        },
      ]
    }
  >
    <View
      style={
        [
          {
            "justifyContent": "center",
            "marginHorizontal": 22,
            "paddingBottom": 22,
          },
          {
            "marginTop": 22,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <Text
          adjustsFontSizeToFit={true}
          minimumFontScale={0.65}
          numberOfLines={1}
          style={
            [
              {
                "color": "#FFFFFF",
                "fontFamily": "Quicksand-Regular",
                "fontSize": 22,
                "includeFontPadding": false,
              },
              {
                "fontFamily": "Quicksand-Medium",
                "fontSize": 27,
              },
              null,
            ]
          }
        >
          Create Wallet
        </Text>
      </View>
    </View>
    <View
      style={
        {
          "flex": 1,
          "paddingTop": 11,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={false}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignSelf": "stretch",
            "borderRadius": 16,
            "marginBottom": 11,
            "marginLeft": 11,
            "marginRight": 11,
            "marginTop": 11,
            "opacity": 1,
            "paddingBottom": 11,
            "paddingLeft": 11,
            "paddingRight": 11,
            "paddingTop": 11,
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "rgba(255, 255, 255, .1)",
              "borderRadius": 16,
              "bottom": 0,
              "left": 0,
              "overflow": "hidden",
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "width": "100%",
            }
          }
        >
          <View
            style={
              {
                "margin": 11,
              }
            }
          >
            <View
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  {
                    "borderRadius": 22,
                    "height": 45,
                    "marginLeft": 6,
                    "width": 45,
                  },
                ]
              }
            >
              <FastImageView
                resizeMode="cover"
                source={
                  {
                    "uri": "https://content.edge.app/country-logos/united-states-of-america.png",
                  }
                }
                style={
                  {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              {
                "alignItems": "flex-start",
                "flex": 1,
                "flexDirection": "column",
                "margin": 11,
              }
            }
          >
            <Text
              adjustsFontSizeToFit={false}
              minimumFontScale={0.65}
              numberOfLines={1}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "Quicksand-Regular",
                    "fontSize": 22,
                    "includeFontPadding": false,
                  },
                  undefined,
                  null,
                ]
              }
            >
              USD
            </Text>
            <Text
              adjustsFontSizeToFit={true}
              minimumFontScale={0.65}
              numberOfLines={2}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "Quicksand-Regular",
                    "fontSize": 22,
                    "includeFontPadding": false,
                  },
                  {
                    "color": "#3dd9f4",
                    "fontSize": 17,
                    "marginTop": 6,
                  },
                  null,
                ]
              }
            >
              United States Dollar
            </Text>
          </View>
        </View>
      </View>
      <Text
        adjustsFontSizeToFit={true}
        minimumFontScale={0.65}
        numberOfLines={1}
        style={
          [
            {
              "color": "#FFFFFF",
              "fontFamily": "Quicksand-Regular",
              "fontSize": 22,
              "includeFontPadding": false,
            },
            {
              "color": "#FFFFFF",
              "fontSize": 17,
              "paddingBottom": 11,
              "paddingHorizontal": 22,
              "textAlign": "left",
            },
            null,
          ]
        }
      >
        Tap on wallet to edit name
      </Text>
      <View
        style={
          {
            "flex": 1,
            "overflow": "hidden",
          }
        }
      >
        <RCTScrollView
          applyWindowCorrection={[Function]}
          automaticallyAdjustContentInsets={false}
          canChangeSize={true}
          contentContainerStyle={
            {
              "backgroundColor": undefined,
              "minHeight": 1,
              "minWidth": 1,
              "paddingLeft": 0,
              "paddingRight": 0,
            }
          }
          contentHeight={0}
          contentWidth={0}
          data={
            [
              {
                "currencyCode": "BTC",
                "displayName": "Bitcoin (no Segwit)",
                "key": "create-wallet:bitcoin-bip44-bitcoin",
                "pluginId": "bitcoin",
                "tokenId": null,
                "walletType": "wallet:bitcoin-bip44",
              },
              {
                "currencyCode": "ETH",
                "displayName": "Ethereum",
                "key": "create-wallet:ethereum-ethereum",
                "pluginId": "ethereum",
                "tokenId": null,
                "walletType": "wallet:ethereum",
              },
              {
                "createWalletIds": [
                  "bNBAI/Z4YE1h6qk1p28jhjGJwMiARqvZPfnAt6LyxkA=",
                ],
                "currencyCode": "POLY",
                "displayName": "Polymath Network",
                "key": "create-ethereum-9992ec3cf6a55b00978cddf2b27bc6882d88d1ec",
                "pluginId": "ethereum",
                "tokenId": "9992ec3cf6a55b00978cddf2b27bc6882d88d1ec",
              },
            ]
          }
          dataProvider={
            DataProvider {
              "_data": [
                {
                  "currencyCode": "BTC",
                  "displayName": "Bitcoin (no Segwit)",
                  "key": "create-wallet:bitcoin-bip44-bitcoin",
                  "pluginId": "bitcoin",
                  "tokenId": null,
                  "walletType": "wallet:bitcoin-bip44",
                },
                {
                  "currencyCode": "ETH",
                  "displayName": "Ethereum",
                  "key": "create-wallet:ethereum-ethereum",
                  "pluginId": "ethereum",
                  "tokenId": null,
                  "walletType": "wallet:ethereum",
                },
                {
                  "createWalletIds": [
                    "bNBAI/Z4YE1h6qk1p28jhjGJwMiARqvZPfnAt6LyxkA=",
                  ],
                  "currencyCode": "POLY",
                  "displayName": "Polymath Network",
                  "key": "create-ethereum-9992ec3cf6a55b00978cddf2b27bc6882d88d1ec",
                  "pluginId": "ethereum",
                  "tokenId": "9992ec3cf6a55b00978cddf2b27bc6882d88d1ec",
                },
              ],
              "_firstIndexToProcess": 0,
              "_hasStableIds": true,
              "_requiresDataChangeHandling": false,
              "_size": 3,
              "getStableId": [Function],
              "rowHasChanged": [Function],
            }
          }
          disableRecycling={false}
          estimatedItemSize={96}
          extendedState={
            {
              "value": {
                "create-ethereum-9992ec3cf6a55b00978cddf2b27bc6882d88d1ec": "My Ether 2",
                "create-wallet:bitcoin-bip44-bitcoin": "My Bitcoin",
                "create-wallet:ethereum-ethereum": "My Ether 2",
              },
            }
          }
          externalScrollView={[Function]}
          extraData={
            {
              "create-ethereum-9992ec3cf6a55b00978cddf2b27bc6882d88d1ec": "My Ether 2",
              "create-wallet:bitcoin-bip44-bitcoin": "My Bitcoin",
              "create-wallet:ethereum-ethereum": "My Ether 2",
            }
          }
          finalRenderAheadOffset={250}
          forceNonDeterministicRendering={true}
          horizontal={false}
          initialOffset={0}
          initialRenderIndex={0}
          isHorizontal={false}
          keyExtractor={[Function]}
          layoutProvider={
            GridLayoutProviderWithProps {
              "_acceptableRelayoutDelta": 1,
              "_getHeightOrWidth": [Function],
              "_getLayoutTypeForIndex": [Function],
              "_getSpan": [Function],
              "_hasExpired": false,
              "_maxSpan": 1,
              "_setLayoutForType": [Function],
              "_tempDim": {
                "height": 0,
                "width": 0,
              },
              "averageWindow": AverageWindow {
                "currentAverage": 96,
                "currentCount": 1,
                "inputValues": [
                  96,
                ],
                "nextIndex": 1,
              },
              "defaultEstimatedItemSize": 100,
              "layoutObject": {
                "size": undefined,
                "span": undefined,
              },
              "props": {
                "automaticallyAdjustContentInsets": false,
                "data": [
                  {
                    "currencyCode": "BTC",
                    "displayName": "Bitcoin (no Segwit)",
                    "key": "create-wallet:bitcoin-bip44-bitcoin",
                    "pluginId": "bitcoin",
                    "tokenId": null,
                    "walletType": "wallet:bitcoin-bip44",
                  },
                  {
                    "currencyCode": "ETH",
                    "displayName": "Ethereum",
                    "key": "create-wallet:ethereum-ethereum",
                    "pluginId": "ethereum",
                    "tokenId": null,
                    "walletType": "wallet:ethereum",
                  },
                  {
                    "createWalletIds": [
                      "bNBAI/Z4YE1h6qk1p28jhjGJwMiARqvZPfnAt6LyxkA=",
                    ],
                    "currencyCode": "POLY",
                    "displayName": "Polymath Network",
                    "key": "create-ethereum-9992ec3cf6a55b00978cddf2b27bc6882d88d1ec",
                    "pluginId": "ethereum",
                    "tokenId": "9992ec3cf6a55b00978cddf2b27bc6882d88d1ec",
                  },
                ],
                "estimatedItemSize": 96,
                "extraData": {
                  "create-ethereum-9992ec3cf6a55b00978cddf2b27bc6882d88d1ec": "My Ether 2",
                  "create-wallet:bitcoin-bip44-bitcoin": "My Bitcoin",
                  "create-wallet:ethereum-ethereum": "My Ether 2",
                },
                "keyExtractor": [Function],
                "numColumns": 1,
                "renderItem": [Function],
              },
              "renderWindowInsets": {
                "height": 0,
                "width": 0,
              },
              "shouldRefreshWithAnchoring": true,
            }
          }
          maxRenderAhead={750}
          numColumns={1}
          onEndReached={[Function]}
          onEndReachedThreshold={0}
          onEndReachedThresholdRelative={0}
          onItemLayout={[Function]}
          onLayout={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onSizeChanged={[Function]}
          onVisibleIndicesChanged={[Function]}
          removeClippedSubviews={false}
          renderAheadOffset={0}
          renderAheadStep={250}
          renderContentContainer={[Function]}
          renderItem={[Function]}
          renderItemContainer={[Function]}
          rowRenderer={[Function]}
          scrollEventThrottle={16}
          scrollThrottle={16}
          scrollViewProps={
            {
              "contentContainerStyle": {
                "backgroundColor": undefined,
                "minHeight": 1,
                "minWidth": 1,
                "paddingLeft": 0,
                "paddingRight": 0,
              },
              "onLayout": [Function],
              "onScrollBeginDrag": [Function],
              "refreshControl": undefined,
              "style": {
                "minHeight": 1,
                "minWidth": 1,
              },
            }
          }
          style={
            {
              "minHeight": 1,
              "minWidth": 1,
            }
          }
          suppressBoundedSizeException={true}
          windowCorrectionConfig={
            {
              "applyToInitialOffset": true,
              "applyToItemScroll": true,
              "value": {
                "endCorrection": 0,
                "startCorrection": 0,
                "windowShift": -0,
              },
            }
          }
        >
          <View>
            <View
              style={
                {
                  "flexDirection": "column",
                }
              }
            >
              <AutoLayoutView
                enableInstrumentation={false}
                horizontal={false}
                onBlankAreaEvent={[Function]}
                onLayout={[Function]}
                renderAheadOffset={0}
                scrollOffset={0}
                style={
                  {
                    "height": 0,
                    "width": 0,
                  }
                }
                windowSize={0}
              />
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "alignSelf": "center",
            "borderRadius": 34,
            "justifyContent": "center",
            "marginBottom": 0,
            "marginLeft": 11,
            "marginRight": 11,
            "marginTop": 11,
            "opacity": 1,
          }
        }
      >
        <BVLinearGradient
          colors={
            [
              872415231,
              872415231,
            ]
          }
          endPoint={
            {
              "x": 1,
              "y": 1,
            }
          }
          locations={null}
          startPoint={
            {
              "x": 0,
              "y": 0,
            }
          }
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 67,
                "justifyContent": "center",
                "paddingHorizontal": 45,
              },
              {
                "alignSelf": "center",
                "opacity": 1,
              },
              {
                "alignItems": "center",
                "alignSelf": "stretch",
                "borderRadius": 34,
                "justifyContent": "center",
              },
              [
                {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "borderRadius": 34,
                  "justifyContent": "center",
                },
                {
                  "marginBottom": 0,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {},
                {
                  "alignSelf": "center",
                },
              ],
            ]
          }
        >
          <Text
            adjustsFontSizeToFit={false}
            minimumFontScale={0.65}
            numberOfLines={1}
            style={
              [
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Quicksand-Regular",
                  "fontSize": 22,
                  "includeFontPadding": false,
                },
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Quicksand-Regular",
                  "fontSize": 22,
                },
                null,
              ]
            }
          >
            Create Wallets
          </Text>
        </BVLinearGradient>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "alignSelf": "center",
            "borderRadius": 34,
            "justifyContent": "center",
            "marginBottom": 22,
            "marginLeft": 11,
            "marginRight": 11,
            "marginTop": 11,
            "opacity": 1,
          }
        }
      >
        <BVLinearGradient
          colors={
            [
              16777215,
              16777215,
            ]
          }
          endPoint={
            {
              "x": 1,
              "y": 1,
            }
          }
          locations={null}
          startPoint={
            {
              "x": 0,
              "y": 0,
            }
          }
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 67,
                "justifyContent": "center",
                "paddingHorizontal": 45,
              },
              {
                "alignSelf": "center",
                "opacity": 1,
              },
              {
                "alignItems": "center",
                "alignSelf": "stretch",
                "borderRadius": 34,
                "justifyContent": "center",
              },
              [
                {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "borderRadius": 34,
                  "justifyContent": "center",
                },
                {
                  "marginBottom": 22,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {},
                {
                  "alignSelf": "center",
                },
              ],
            ]
          }
        >
          <Text
            adjustsFontSizeToFit={false}
            minimumFontScale={0.65}
            numberOfLines={1}
            style={
              [
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Quicksand-Regular",
                  "fontSize": 22,
                  "includeFontPadding": false,
                },
                {
                  "color": "#00f1a2",
                  "fontFamily": "Quicksand-Regular",
                  "fontSize": 22,
                },
                null,
              ]
            }
          >
            Import Wallets
          </Text>
        </BVLinearGradient>
      </View>
    </View>
    <View
      drawerOpenRatio={
        {
          "value": 1,
        }
      }
      isKeyboardOpen={true}
      onLayout={[Function]}
      style={
        [
          {
            "alignItems": "stretch",
            "bottom": 0,
            "flexDirection": "column",
            "justifyContent": "flex-start",
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
          },
          {
            "bottom": 0,
          },
        ]
      }
    />
  </View>,
]
`;
